[{"C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\index.js":"1","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\App.js":"2","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\About.js":"4","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\EditUser.js":"5","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\NavbarComponent.js":"6","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\Home.js":"7","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\ViewbyId.js":"8","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\AddUser.js":"9"},{"size":627,"mtime":1677751830000,"results":"10","hashOfConfig":"11"},{"size":793,"mtime":1677751830000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1677751830000,"results":"13","hashOfConfig":"11"},{"size":561,"mtime":1677751830000,"results":"14","hashOfConfig":"11"},{"size":5816,"mtime":1677751830000,"results":"15","hashOfConfig":"11"},{"size":1103,"mtime":1677751830000,"results":"16","hashOfConfig":"11"},{"size":5536,"mtime":1677751830000,"results":"17","hashOfConfig":"11"},{"size":1542,"mtime":1677751830000,"results":"18","hashOfConfig":"11"},{"size":4947,"mtime":1677751830000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n35iqa",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\index.js",[],[],"C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\App.js",["52"],[],"import { useState } from \"react\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavbarComponent from \"./components/NavbarComponent\";\nimport Home from \"./components/Home\";\nimport AddUser from \"./components/AddUser\";\nimport {Routes,Route} from \"react-router-dom\"\nimport About from \"./components/About\";\nimport EditUser from \"./components/EditUser\";\nimport ViewbyId from \"./components/ViewbyId\";\n\nconst App = () => {\n\nreturn (\n  <div>\n<NavbarComponent/>\n<Routes>\n<Route path=\"/view/:id\" element={<ViewbyId/>} />\n\n<Route path=\"/allstud\" element={<Home/>} />\n<Route path=\"/addstud\" element={<AddUser />}/>\n<Route path=\"/\" element={<About />} />\n<Route path=\"/edit/:id\" element={<EditUser/>}/>\n</Routes>\n{/* <Home/>\n<AddUser/> */}\n  </div>\n \n  );\n};\nexport default App;","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\About.js",[],[],"C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\EditUser.js",["53","54","55","56","57"],[],"// import Button from 'react-bootstrap/Button';\r\n// import Form from 'react-bootstrap/Form';\r\nimport { Form, InputGroup, Row, Button } from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react'\r\nimport { NavLink ,useParams} from 'react-router-dom'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction EditUser() {\r\n    const navigate = useNavigate();\r\n    \r\n    const [inputdata,setInputdata]=useState({\r\n        \"movie_name\":\"\",\r\n        \"actor\":\"\",\r\n        \"actress\":\"\",\r\n        \"language\":\"\",\r\n        \"releasedyear\":\"\",\r\n        \"director\":\"\",\r\n        \"camera\":\"\",\r\n        \"producer\":\"\"\r\n    })\r\n    \r\n    //onchange function\r\n    const setstud=(e)=>{\r\n        console.log(e.target.value);\r\n        const {name,value}=e.target;\r\n        setInputdata((prestud)=>{\r\n            return{\r\n                ...prestud,[name]:value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    //get single data student\r\n    const { id } = useParams(\"\");\r\n    console.log(id);\r\n\r\n    const getstuddata = async () => {\r\n        const res = await fetch(`http://localhost:5001/getstud/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        if (res.status === 422 || !data) {\r\n            console.log(\"error \");\r\n        } else {\r\n            setInputdata(data)\r\n            console.log(\"get data\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getstuddata();\r\n    }, [])\r\n\r\n    //update student Data\r\n    const updatestud= async(e)=>{\r\n        e.preventDefault();\r\n\r\n        const {actor,\r\n            actress,\r\n            language,\r\n            releasedyear,\r\n        director, camera,producer} =inputdata;\r\n        const res2 = await fetch(`http://localhost:5001/updatestud/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                actor,\r\n                actress,\r\n                language,\r\n                releasedyear,\r\n            director, camera,producer            })\r\n        });\r\n        const data2= await res2.json();\r\n        setInputdata(data2);\r\n        toast.success('Please wait  !', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true, \r\n            progress: undefined,\r\n            });\r\n        setTimeout(() => {\r\n            navigate('/allstud');\r\n          }, 3000);\r\n\r\n\r\n    }\r\n\r\n    \r\n  return (\r\n\r\n\r\n    <form className=\"container mt-3 mb-3\">\r\n    <Row className=\"mb-3\">\r\n        <Form.Group controlId=\"formBasicEmail\" className=\"col col-sm-6\">\r\n            <h2>Edit Details</h2>\r\n            <Form.Label>Movie Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"movie_name\" value={inputdata.movie_name} onChange={setstud} className=\"form-control\" />\r\n        </Form.Group>\r\n        \r\n    </Row>\r\n    <Row className=\"mb-3\">\r\n      \r\n    <Form.Group controlId=\"formBasicEmail\" className=\"col col-sm-6\">\r\n            <Form.Label>Actor</Form.Label>\r\n            <Form.Control type=\"text\" name=\"actor\" value={inputdata.actor} onChange={setstud} className=\"form-control\" />\r\n        </Form.Group>\r\n    </Row>\r\n    <Row className=\"mb-3\">\r\n      \r\n        <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n            <Form.Label>Actress</Form.Label>\r\n            <Form.Control className=\"form-control\" name=\"actress\" value={inputdata.actress} onChange={setstud} type=\"text\" />\r\n        </Form.Group>\r\n    </Row>\r\n    \r\n\r\n    <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Language</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"language\" value={inputdata.language} onChange={setstud} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Director</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"director\" value={inputdata.director} onChange={setstud} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Released year</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"releasedyear\" value={inputdata.releasedyear} onChange={setstud} type=\"Date\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Camera</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"camera\" value={inputdata.camera} onChange={setstud} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Producer</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"producer\" value={inputdata.producer} onChange={setstud} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n    <Row className=\"mb-3\">\r\n        <Form.Group controlId=\"formGridCheckbox\" className=\"col col-sm-6\">\r\n            <button type=\"submit\" onClick={updatestud} className=\"me-4 btn btn-success btn-lg btn-block\">Submit</button>\r\n            {/* <button type=\"reset\" onClick=\"{resetButton}\" className=\"me-4 btn btn-danger btn-lg btn-block\">Cancel</button> */}\r\n        </Form.Group>\r\n    </Row>\r\n</form>\r\n  );\r\n}\r\n\r\nexport default EditUser;","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\NavbarComponent.js",[],[],"C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\Home.js",["58","59"],[],"// import {Table,Button} from 'react-bootstrap';\r\n// import \"./Home.css\"\r\n// function Home() {\r\n//   return (\r\n//     <Table striped bordered hover>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>#</th>\r\n//           <th>Movie</th>\r\n//           <th>Actor</th>\r\n//           <th>Actress</th>\r\n//           <th>Language</th>\r\n// <th>Director</th>\r\n// <th>Released Year</th>\r\n// <th>Camera</th>\r\n// <th>Producer</th>\r\n// <th>Actions</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         <tr>\r\n//           <td>1</td>\r\n//           <td>Brokeback mountain</td>\r\n//           <td>Heath Ledger</td>\r\n//           <td> Jake Gyllenhaal</td>\r\n//           <td>English</td>\r\n//           <td>Ang Lee</td>\r\n//           <td></td>\r\n//           <td></td>\r\n//           <td></td>\r\n//           <td className='d-flex justify-content-between'>\r\n\r\n      \r\n//           <Button variant=\"outline-primary\">Edit</Button>   \r\n//           <Button variant=\"outline-danger\">Danger</Button>\r\n//           </td>\r\n//         </tr>\r\n        \r\n    \r\n//       </tbody>\r\n//     </Table>\r\n//   );\r\n// }\r\n\r\n// export default Home;\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n\r\n    const [getstud, SetGetstud] = useState([]);\r\n    console.log(getstud)\r\n    //get student Data\r\n    const getstuddata = async () => {\r\n\r\n        const res = await fetch(\"http://localhost:5001/getstud\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        if (res.status === 422 || !data) {\r\n            console.log(\"error \");\r\n        } else {\r\n            SetGetstud(data)\r\n            console.log(\"get data\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getstuddata();\r\n    }, [])\r\n\r\n    //Delete student data\r\n    const deletestud = async (id) => {\r\n\r\n        const res2 = await fetch(`http://localhost:5001/deletestud/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        const deletedata = await res2.json();\r\n\r\n        if (res2.status === 422 || !deletedata) {\r\n            console.log(\"error\");\r\n        } else {\r\n            getstuddata();\r\n\r\n        }\r\n\r\n    }\r\n    //search Student\r\n    const [searchInput,setSearchInput]=useState('');\r\n    const searchStud=(searchval)=>{\r\n        setSearchInput(searchval)\r\n    }\r\n    return (\r\n        <div className='container mt-5'>\r\n            <div className='d-flex'>\r\n                <h4>All Movie Information</h4>\r\n                <div class=\"ms-auto w-50\">\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Search movies\" \r\n                        onChange={(e)=>searchStud(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className='underline'></div>\r\n            <table className=\"table table-bordered mt-5\">\r\n                <thead className='table-dark'>\r\n                    <tr>\r\n                        <th scope=\"col\">No</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Actor</th>\r\n                        <th scope=\"col\">Actress</th>\r\n                        <th scope=\"col\">Language </th>\r\n                        <th scope=\"col\">Producer </th>\r\n                        <th scope=\"col\">Camera </th>\r\n\r\n                        <th scope=\"col\">Releasedyear </th>\r\n                        <th scope=\"col\">Director </th>\r\n<th scope=\"col\">Action</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {getstud.filter((val)=>{\r\n                        if(searchInput == \"\"){\r\n                            return val\r\n                        }else if(val.movie_name.toLowerCase().includes(searchInput.toLowerCase())){\r\n                            return val; \r\n                        }\r\n                    }).map((result, id) => {\r\n                        return (\r\n                            <>\r\n\r\n                                <tr key={id}>\r\n                                    <th scope=\"row\">{id + 1}</th>\r\n                                    <td>{result.movie_name}</td>\r\n                                    <td>{result.actor}</td>\r\n                                    <td>{result.actress}</td>\r\n                                    <td>{result.language}</td>\r\n                                    <td>{result.producer}</td>\r\n<td>{result.camera}</td>\r\n                                    <td>{result.releasedyear}</td>\r\n                                    <td>{result.director}</td>\r\n\r\n                                    <td>\r\n                                        <Link className='btn btn-success ms-2' to={`/view/${result._id}`}>View</Link>\r\n                                        <Link className='btn btn-warning ms-2' to={`/edit/${result._id}`}>Update</Link>\r\n                                        <button className='btn btn-danger ms-2'\r\n                                            data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" onClick={() => deletestud(result._id)}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n\r\n                            </>\r\n                        )\r\n                    })}\r\n\r\n\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\ViewbyId.js",["60","61"],[],"import React,{useEffect,useState} from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\n\r\n\r\nconst ViewbyId = () => {\r\n  const [getstud, SetGetstud] = useState([]);\r\n\r\nconst { id } = useParams(\"\");\r\nconsole.log(id);\r\n\r\nconst getstuddata = async () => {\r\n    const res = await fetch(`http://localhost:5001/getstud/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (res.status === 422 || !data) {\r\n        console.log(\"error \");\r\n    } else {\r\n        SetGetstud(data)\r\n        console.log(\"get data\");\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    getstuddata();\r\n}, [])\r\n\r\n  return (\r\n    <div>ViewbyId\r\n\r\n<Card style={{ width: '18rem' }}>\r\n      <ListGroup variant=\"flush\">\r\n        <ListGroup.Item>Movie Name:{getstud.movie_name}</ListGroup.Item>\r\n        <ListGroup.Item>Language:{getstud.language}</ListGroup.Item>\r\n        <ListGroup.Item>Actor:{getstud.actor}</ListGroup.Item>\r\n        <ListGroup.Item>Actress:{getstud.actress}</ListGroup.Item>\r\n        <ListGroup.Item>Camera:{getstud.camera}</ListGroup.Item>\r\n        <ListGroup.Item>Producer:{getstud.producer}</ListGroup.Item>\r\n        <ListGroup.Item>Year:{getstud.releasedyear}</ListGroup.Item>\r\n        <ListGroup.Item>Director:{getstud.director}</ListGroup.Item>\r\n      \r\n      </ListGroup>\r\n    </Card>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewbyId","C:\\Users\\KUNJUNNI\\Desktop\\crud-git2\\crud-main\\frontend\\src\\components\\AddUser.js",["62"],[],"\r\nimport { useState } from 'react';\r\nimport { Form,  Row} from 'react-bootstrap';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Toastontainer, toast } from 'react-toastify';\r\n\r\nfunction AddUser() {\r\n    const navigate = useNavigate();\r\n\r\n    const [formdata,setformdata]=useState({\r\n        \"movie_name\":\"\",\r\n        \"actor\":\"\",\r\n        \"actress\":\"\",\r\n        \"language\":\"\",\r\n        \"releasedyear\":\"\",\r\n        \"director\":\"\",\r\n        \"camera\":\"\",\r\n        \"producer\":\"\"\r\n\r\n    })\r\n    \r\n\r\n //onchange function\r\n const handleChange=(e)=>{\r\n    console.log(e.target.value);\r\n    setformdata({ ...formdata, [e.target.name]: e.target.value });   \r\n}\r\n\r\n  //onclick event\r\n  const addinpdata = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {  movie_name,\r\n        actor,\r\n        actress,\r\n        language,\r\n        releasedyear,\r\n    director, camera,producer} = formdata;\r\n\r\n    const res = await fetch(\"http://localhost:5001/addstud\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            movie_name,\r\n            actor,\r\n            actress,\r\n            language,\r\n            releasedyear,\r\n        director, camera,producer\r\n        })\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n\r\n    if (res.status === 422 || !data) {\r\n        console.log(\"error \");\r\n        alert(\"error\");\r\n\r\n    } else {\r\n        setformdata(data);\r\n        toast.success('Please wait  !', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true, \r\n            progress: undefined,\r\n            });\r\n        setTimeout(() => {\r\n            navigate('/allstud');\r\n          }, 3000);\r\n\r\n    }\r\n}\r\n  return (\r\n\r\n\r\n    <form className=\"container mt-3 mb-3\">\r\n    <Row className=\"mb-3\">\r\n        <Form.Group controlId=\"formBasicEmail\" className=\"col col-sm-6\">\r\n            <Form.Label>Movie Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"movie_name\" value={formdata.movie_name} onChange={handleChange} className=\"form-control\" />\r\n        </Form.Group>\r\n        \r\n    </Row>\r\n    <Row className=\"mb-3\">\r\n      \r\n    <Form.Group controlId=\"formBasicEmail\" className=\"col col-sm-6\">\r\n            <Form.Label>Actor</Form.Label>\r\n            <Form.Control type=\"text\" name=\"actor\" value={formdata.actor} onChange={handleChange} className=\"form-control\" />\r\n        </Form.Group>\r\n    </Row>\r\n    <Row className=\"mb-3\">\r\n      \r\n        <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n            <Form.Label>Actress</Form.Label>\r\n            <Form.Control className=\"form-control\" name=\"actress\" value={formdata.actress} onChange={handleChange} type=\"text\" />\r\n        </Form.Group>\r\n    </Row>\r\n    \r\n\r\n    <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Language</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"language\" value={formdata.language} onChange={handleChange} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Director</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"director\" value={formdata.director} onChange={handleChange} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Released year</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"releasedyear\" value={formdata.released_year} onChange={handleChange} type=\"Date\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Camera</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"camera\" value={formdata.camera} onChange={handleChange} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n  <Row className=\"mb-3\">\r\n      \r\n      <Form.Group className=\"col col-sm-6\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Producer</Form.Label>\r\n          <Form.Control className=\"form-control\" name=\"producer\" value={formdata.producer} onChange={handleChange} type=\"text\" />\r\n      </Form.Group>\r\n  </Row>\r\n\r\n\r\n    <Row className=\"mb-3\">\r\n        <Form.Group controlId=\"formGridCheckbox\" className=\"col col-sm-6\">\r\n            <button type=\"submit\" onClick={addinpdata} className=\"me-4 btn btn-success btn-lg btn-block\">Submit</button>\r\n            {/* <button type=\"reset\" onClick=\"{resetButton}\" className=\"me-4 btn btn-danger btn-lg btn-block\">Cancel</button> */}\r\n        </Form.Group>\r\n    </Row>\r\n</form>\r\n  );\r\n}\r\n\r\nexport default AddUser;",{"ruleId":"63","severity":1,"message":"64","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":18},{"ruleId":"63","severity":1,"message":"67","line":3,"column":16,"nodeType":"65","messageId":"66","endLine":3,"endColumn":26},{"ruleId":"63","severity":1,"message":"68","line":3,"column":33,"nodeType":"65","messageId":"66","endLine":3,"endColumn":39},{"ruleId":"63","severity":1,"message":"69","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":17},{"ruleId":"63","severity":1,"message":"70","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":58,"column":8,"nodeType":"73","endLine":58,"endColumn":10,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":133,"column":42,"nodeType":"77","messageId":"78","endLine":133,"endColumn":44},{"ruleId":"79","severity":1,"message":"80","line":134,"column":40,"nodeType":"81","messageId":"82","endLine":134,"endColumn":42},{"ruleId":"63","severity":1,"message":"83","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":35,"column":4,"nodeType":"73","endLine":35,"endColumn":6,"suggestions":"84"},{"ruleId":"63","severity":1,"message":"85","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","'ToastContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getstuddata'. Either include it or remove the dependency array.","ArrayExpression",["86"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.",["87"],"'Toastontainer' is defined but never used.",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [getstuddata]",{"range":"91","text":"92"},{"range":"93","text":"92"},[1610,1612],"[getstuddata]",[786,788]]